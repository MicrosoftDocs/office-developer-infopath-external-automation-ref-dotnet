<Type Name="Window" FullName="Microsoft.Office.InfoPath.Window">
  <TypeSignature Language="C#" Value="public abstract class Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Window extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.InfoPath.Window" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window abstract" />
  <TypeSignature Language="F#" Value="type Window = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a window that is used in the Microsoft InfoPath application.</summary>
    <remarks>
      <para>The <b>Window</b> objects represent the two types of windows that are used in the InfoPath application: the editing window that displays a form when a user fills out a form, and the designing window that is used in design mode when a user designs a form template.</para>
      <para>The <b>Window</b> object provides properties and methods that can be used to programmatically interact with InfoPath windows, including the ability to activate or close a window and the ability to interact with the task panes and command bars that they contain. The <b>Window</b> object also provides the <see cref="P:Microsoft.Office.InfoPath.Window.XmlForm" /> property for accessing the form's underlying XML document that is associated with the window.</para>
      <para>The <b>Window</b> objects of an InfoPath form are accessed through the <see cref="P:Microsoft.Office.InfoPath.WindowCollection.Item(System.Int32)" /> property of the <see cref="T:Microsoft.Office.InfoPath.WindowCollection" /> object. The type of window can be determined by using the <see cref="P:Microsoft.Office.InfoPath.Window.WindowType" /> property.</para>
      <para>You can access the currently open window directly by using the <see cref="P:Microsoft.Office.InfoPath.Application.ActiveWindow" /> property of the <see cref="T:Microsoft.Office.InfoPath.Application" /> object, instead of using the <see cref="T:Microsoft.Office.InfoPath.WindowCollection" /> collection. You can also access the <b>Window</b> object that is associated with a view by using the <see cref="P:Microsoft.Office.InfoPath.View.Window" /> property of the <see cref="T:Microsoft.Office.InfoPath.View" /> object.</para>
      <para>
        <b>Note</b>: Some properties of the <b>Window</b> object are only available when using the editing window type; they will return an error if used with the designing window type.</para>
      <para />
    </remarks>
    <example>
      <para>In the following example, the <see cref="P:Microsoft.Office.InfoPath.Application.ActiveWindow" /> property is used to set a reference to the current window. Then the code checks the window type; if it is the editing window type, it displays the number of task panes contained in the window in a message box.</para>
      <code>// Set a reference to the current window.
Window currentWindow = this.Application.ActiveWindow;

// Check if the window is an editing window;
if (currentWindow.WindowType == WindowType.Editor)
{
   MessageBox.Show("Number of task panes: " + 
      currentWindow.TaskPanes.Count.ToString());
}</code>
      <code>' Set a reference to the current window.
Dim currentWindow As Window  = Me.Application.ActiveWindow

' Check if the window is an editing window;
If currentWindow.WindowType = WindowType.Editor Then
   MessageBox.Show("Number of task panes: " &amp;amp; _
      currentWindow.TaskPanes.Count.ToString())
End If</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Window ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public abstract void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Activates (gives focus to) the window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <remarks>
          <para>The <b>Activate</b> method can be used when more than one InfoPath form is open to give focus to the window represented by the referenced <b>Window</b> object.</para>
          <para>The <b>Activate</b> method can be used only with the editing window types; if used with a designing window type, it will raise an exception.</para>
          <para>To determine whether a window is the active window, use the <see cref="P:Microsoft.Office.InfoPath.Window.Active" /> property.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>Activate</b> method of the <b>Window</b> class is used to give focus to the third window in the collection of open windows.</para>
          <code>this.Application.XmlForms[2].CurrentView.Window.Activate();</code>
          <code>Me.Application.XmlForms(2).CurrentView.Window.Activate()</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public abstract bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.Active" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="Microsoft.Office.InfoPath.Window.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the window associated with the <see cref="T:Microsoft.Office.InfoPath.Window" /> object is the active window.</summary>
        <value>
          <b>true</b> if the window associated with the <see cref="T:Microsoft.Office.InfoPath.Window" /> object is the active window, otherwise <b>false</b>.</value>
        <remarks>
          <para>To designate a window as the active window, use the <see cref="M:Microsoft.Office.InfoPath.Window.Activate" /> method.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public abstract string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.Caption" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="Microsoft.Office.InfoPath.Window.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the caption text for the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <value>The caption text for the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</value>
        <remarks>
          <para>The caption text that is returned or set by this property corresponds to the text preceding "- Microsoft InfoPath" on the title bar of the window</para>
          <para>This member can be accessed without restrictions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object prompting to save changes to any unsaved form, or form with changes that have not been saved.</summary>
        <remarks>
          <para>The <b>Close()</b> method will close the associated window and the forms that it contains. If the form has not been saved, or has changes that have not been saved, the user will be prompted to save changes before closing.</para>
          <para>The <b>Close</b> method can be used only with the editing window types; if used with a designing window type, it will raise an exception. In addition, the <b>Close</b> method can only be used with the <see cref="T:Microsoft.Office.InfoPath.SubmitEventHandler" /> and <see cref="T:Microsoft.Office.InfoPath.ClickedEventHandler" /> event handlers. If used with any other type of event handler, it will raise an exception.</para>
          <para>
            <b>Note</b>: If the window being closed is the only window open in Microsoft InfoPath, the InfoPath application will also be closed.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>Close</b> method of the <b>Window</b> class is used to close the currently active window, forcing a save if changes in the form have occurred.</para>
          <code>this.Application.ActiveWindow.Close();</code>
          <code>Me.Application.ActiveWindow.Close()</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close (bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Window.Close(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close (force As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close(bool force);" />
      <MemberSignature Language="F#" Value="abstract member Close : bool -&gt; unit" Usage="window.Close force" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="force">Specifies whether open unsaved documents will be saved. The default value is <b>false</b>.</param>
        <summary>Closes the window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object and optionally forces an unsaved form or form with unsaved changes to be closed without saving.</summary>
        <remarks>
          <para>The <b>Close(</b><paramref name="force" /><b>)</b> method will close the associated window and the forms that it contains. If the <paramref name="force" /> parameter is set to <b>true</b>, all forms will be closed without saving, even if they have not been saved, or contain changes since they were last saved. If set to <b>false</b>, users will be prompted to save their changes.</para>
          <para>The <b>Close</b> method can be used only with the editing window types; if used with a designing window type, it will raise an exception. In addition, the <b>Close</b> method can only be used with the <see cref="T:Microsoft.Office.InfoPath.SubmitEventHandler" /> and <see cref="T:Microsoft.Office.InfoPath.ClickedEventHandler" /> event handlers. If used with any other type of event handler, it will raise an exception.</para>
          <para>
            <b>Note</b>: If the window being closed is the only window open in Microsoft InfoPath, the InfoPath application will also be closed.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>Close</b> method of the <b>Window</b> class is used to close the currently active window, and will force an unsaved form with changes to close without saving changes.</para>
          <code>this.Application.ActiveWindow.Close(true);</code>
          <code>Me.Application.ActiveWindow.Close(true)</code>
        </example>
        <exception cref="T:System.InvalidOperationException">The <b>Close</b> method was called from an event handler for the <see cref="E:Microsoft.Office.InfoPath.FormEvents.Loading" /> event</exception>
        <exception cref="T:System.ArgumentNullException">The parameter passed to this method is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">The parameter passed to this method is not valid. For example, it is of the wrong type or format.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public abstract object CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CommandBars As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ CommandBars { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBars : obj" Usage="Microsoft.Office.InfoPath.Window.CommandBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the Microsoft Office <b>CommandBars</b> collection of the window that is associated with the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <value>A reference to the Microsoft Office <b>CommandBars</b> collection of the window that is associated with the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</value>
        <remarks>
          <para>After you establish a reference to the <b>CommandBars</b> collection, you can access all the properties and methods of this class.</para>
          <para>
            <b>Important</b>: For the <b>CommandBars</b> property to work, you must establish a reference to the Microsoft Office 14.0 Object Library using the COM tab of the Add Reference dialog box in Visual Studio 2012. This will establish a reference to the <b>Microsoft.Office.Core</b> namespace, which contains the <b>CommandBars</b> class. Additionally, the form must be running as Full Trust.</para>
          <para>This member can be accessed only by forms opened from a form template that has been configured to run with full trust using the Security and Trust category of the Form Options dialog box. This member requires full trust for the immediate caller and cannot be used by partially trusted code. For more information, see "Using Libraries from Partially Trusted Code" on MSDN.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>CommandBars</b> property of the <see cref="T:Microsoft.Office.InfoPath.Window" /> class is use to get a <b>CommandBars</b> collection and display the count of Command Bars. </para>
          <para>This example requires a <b>using</b> or <b>Imports</b> directive for the <b>Microsoft.Office.Core</b> namespace in the declarations section of the form code module.</para>
          <code>// Get CommandBars collection casting to 
// Microsoft.Office.Core.CommandBars type.
CommandBars myCommandBars = 
   (CommandBars)this.Application.ActiveWindow.CommandBars;

// Get count using CommandBars Count property.
int commandBarsCount = myCommandBars.Count;

// Display count of command bars.
MessageBox.Show("There are " + commandBarsCount.ToString() + 
   " Command Bars");</code>
          <code>' Get CommandBars collection casting to 
' Microsoft.Office.Core.CommandBars type.
Dim myCommandBars As CommandBars = 
   DirectCast(Me.Application.ActiveWindow.CommandBars, CommandBars)

' Get count using CommandBars Count property.
Dim commandBarsCount As Integer = myCommandBars.Count

' Display count of command bars.
MessageBox.Show("There are " &amp;amp; commandBarsCount.ToString() &amp;amp; 
   " Command Bars")</code>
        </example>
        <exception cref="T:System.Security.SecurityException">The form template is not configured for Full Trust using the Security and Trust category of the Form Options dialog box.</exception>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public abstract int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.Height" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="Microsoft.Office.InfoPath.Window.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</summary>
        <value>The height of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</value>
        <remarks>
          <para>The <b>Height</b> property will raise an exception if it is set on a window that is minimized or maximized.</para>
          <para>The <b>Height</b> property can't be set to a value that is larger than the value returned by the <see cref="P:Microsoft.Office.InfoPath.Application.UsableHeight" /> property of the <see cref="T:Microsoft.Office.InfoPath.Application" /> object.</para>
          <para>This member can be accessed only by forms opened from a form template that has been configured to run with full trust using the Security and Trust category of the Form Options dialog box. This member requires full trust for the immediate caller and cannot be used by partially trusted code. For more information, see "Using Libraries from Partially Trusted Code" on MSDN.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <exception cref="T:System.Security.SecurityException">The form template is not configured for Full Trust using the Security and Trust category of the Form Options dialog box.</exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public abstract int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Left { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Left : int with get, set" Usage="Microsoft.Office.InfoPath.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the horizontal position of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</summary>
        <value>The horizontal position of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</value>
        <remarks>
          <para>The <b>Left</b> property will raise an exception if it is set on a window that is minimized or maximized.</para>
          <para>Setting the <b>Left</b> property to a position that is off the screen will cause the entire window to be displayed on the screen.</para>
          <para>This member can be accessed only by forms opened from a form template that has been configured to run with full trust using the Security and Trust category of the Form Options dialog box. This member requires full trust for the immediate caller and cannot be used by partially trusted code. For more information, see "Using Libraries from Partially Trusted Code" on MSDN.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <exception cref="T:System.Security.SecurityException">The form template is not configured for Full Trust using the Security and Trust category of the Form Options dialog box.</exception>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.MailEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.InfoPath.MailEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MailEnvelope As MailEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Office::InfoPath::MailEnvelope ^ MailEnvelope { Microsoft::Office::InfoPath::MailEnvelope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MailEnvelope : Microsoft.Office.InfoPath.MailEnvelope" Usage="Microsoft.Office.InfoPath.Window.MailEnvelope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.MailEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:Microsoft.Office.InfoPath.MailEnvelope" /> object associated with the window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <value>A reference to the <see cref="T:Microsoft.Office.InfoPath.MailEnvelope" /> object associated with the window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</value>
        <remarks>
          <para>The <b>MailEnvelope</b> object can be used only with the editing window types; if used with a designing window type, it will raise an exception. It will also raise an exception if no form is open in the form area.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskPanes">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.TaskPaneCollection TaskPanes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.InfoPath.TaskPaneCollection TaskPanes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.TaskPanes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TaskPanes As TaskPaneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Office::InfoPath::TaskPaneCollection ^ TaskPanes { Microsoft::Office::InfoPath::TaskPaneCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskPanes : Microsoft.Office.InfoPath.TaskPaneCollection" Usage="Microsoft.Office.InfoPath.Window.TaskPanes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.TaskPaneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:Microsoft.Office.InfoPath.TaskPaneCollection" /> collection that is associated with the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <value>A reference to the <see cref="T:Microsoft.Office.InfoPath.TaskPaneCollection" /> collection that is associated with the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</value>
        <remarks>
          <para>The <b>TaskPanes</b> property can be used only with the editing window types; if used with a designing window type, it will raise an exception.</para>
          <para>This member can be accessed without restrictions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public abstract int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Top { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Top : int with get, set" Usage="Microsoft.Office.InfoPath.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the vertical position of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</summary>
        <value>The vertical position of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</value>
        <remarks>
          <para>The <b>Top</b> property will raise an exception if it is set on a window that is minimized or maximized.</para>
          <para>Setting the <b>Top</b> property to a position that is off the screen will cause the entire window to be displayed on the screen.</para>
          <para>This member can be accessed only by forms opened from a form template that has been configured to run with full trust using the Security and Trust category of the Form Options dialog box. This member requires full trust for the immediate caller and cannot be used by partially trusted code. For more information, see "Using Libraries from Partially Trusted Code" on MSDN.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <exception cref="T:System.Security.SecurityException">The form template is not configured for Full Trust using the Security and Trust category of the Form Options dialog box.</exception>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public abstract int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.Width" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="Microsoft.Office.InfoPath.Window.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the width of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</summary>
        <value>The width of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object, measured in points.</value>
        <remarks>
          <para>The <b>Width</b> property will raise an exception if it is set on a window that is minimized or maximized.</para>
          <para>The <b>Width</b> property can't be set to a value that is larger than the value returned by the <see cref="P:Microsoft.Office.InfoPath.Application.UsableWidth" /> property of the <see cref="T:Microsoft.Office.InfoPath.Application" /> object.</para>
          <para>This member can be accessed only by forms opened from a form template that has been configured to run with full trust using the Security and Trust category of the Form Options dialog box. This member requires full trust for the immediate caller and cannot be used by partially trusted code. For more information, see "Using Libraries from Partially Trusted Code" on MSDN.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
        <exception cref="T:System.Security.SecurityException">The form template is not configured for Full Trust using the Security and Trust category of the Form Options dialog box.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.InfoPath.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Office::InfoPath::WindowState WindowState { Microsoft::Office::InfoPath::WindowState get(); void set(Microsoft::Office::InfoPath::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : Microsoft.Office.InfoPath.WindowState with get, set" Usage="Microsoft.Office.InfoPath.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the state of the window represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <value>A <see cref="T:Microsoft.Office.InfoPath.WindowState" /> enumeration value that represents the state of the window.</value>
        <remarks>
          <para>The state of an inactive window cannot be set. Use the <see cref="M:Microsoft.Office.InfoPath.Window.Activate" /> method to activate a window prior to setting the window state.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowType">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.WindowType WindowType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.InfoPath.WindowType WindowType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.WindowType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WindowType As WindowType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Office::InfoPath::WindowType WindowType { Microsoft::Office::InfoPath::WindowType get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowType : Microsoft.Office.InfoPath.WindowType" Usage="Microsoft.Office.InfoPath.Window.WindowType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.WindowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type of window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <value>A <see cref="T:Microsoft.Office.InfoPath.WindowState" /> enumeration value that represents the window's type.</value>
        <remarks>
          <para>The <b>Window</b> objects represents the two types of windows that are used in the InfoPath application: the editing window that is used when a user fills out a form, and the designing window that is used in design mode when a user designs a form.</para>
          <para>This member can be accessed without restrictions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlForm">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.XmlForm XmlForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.InfoPath.XmlForm XmlForm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Window.XmlForm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlForm As XmlForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Office::InfoPath::XmlForm ^ XmlForm { Microsoft::Office::InfoPath::XmlForm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlForm : Microsoft.Office.InfoPath.XmlForm" Usage="Microsoft.Office.InfoPath.Window.XmlForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.XmlForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:Microsoft.Office.InfoPath.XmlForm" /> object that is associated with the window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</summary>
        <value>A reference to the <see cref="T:Microsoft.Office.InfoPath.XmlForm" /> object that is associated with the window that is represented by the <see cref="T:Microsoft.Office.InfoPath.Window" /> object.</value>
        <remarks>
          <para>The <b>XmlForm</b> property can be used only with the editing window types; if used with a designing window type, it will raise an exception. It will also raise an exception if no form is open in the form area.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed only from code running in forms opened in Microsoft InfoPath Filler.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>