<Type Name="FormErrorCollection" FullName="Microsoft.Office.InfoPath.FormErrorCollection">
  <TypeSignature Language="C#" Value="public abstract class FormErrorCollection : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FormErrorCollection extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.InfoPath.FormErrorCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FormErrorCollection&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormErrorCollection abstract : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type FormErrorCollection = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contains a <see cref="T:Microsoft.Office.InfoPath.FormError" /> object for each error in the current form.</summary>
    <remarks>
      <para>A <b>FormErrorCollection</b> object contains a collection of <b>FormError</b> objects that represent all errors occurring in the associated form. The collection of errors includes validation errors, system-generated errors, and user-defined (custom) errors. The <b>FormErrorCollection</b> class provides properties and methods for adding, deleting, and gaining access to the <b>FormError</b> objects that it contains. You cannot delete validation or system-generated errors from this collection.</para>
      <para>In addition to managing the errors generated by InfoPath, the <b>FormErrorCollection</b> class can also be used to create custom errors using the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Add" /> method.</para>
      <para>
        <b>Note</b>: Custom errors can also be created using the <see cref="Overload:Microsoft.Office.InfoPath.XmlValidatingEventArgs.ReportError" /> method of the <see cref="T:Microsoft.Office.InfoPath.XmlValidatingEventArgs" /> class.</para>
      <para>To access the <b>FormErrorCollection</b> object associated with a form, use the <see cref="P:Microsoft.Office.InfoPath.XmlForm.Errors" /> property of the <see cref="T:Microsoft.Office.InfoPath.XmlForm" /> class.</para>
      <code>FormErrorCollection myErrors = this.Errors;</code>
      <code>Dim myErrors As FormErrorCollection = Me.Errors</code>
      <para />
    </remarks>
    <example>
      <para>In the following example, first an <b>XPathNavigator</b> object is positioned at the field with which to associate an error. Then, the <b>XPathNavigator</b> and error message details are passed to the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Add" /> method of the <b>FormErrorCollection</b> class to add the error to the form's error collection.</para>
      <code>XPathNavigator root, txtbox;
// Create XPathNavigator for main data source.
root = this.MainDataSource.CreateNavigator();

// Create XPathNavigator positioned at field to associate with error.
txtbox = root.SelectSingleNode("//my:field1", this.NamespaceManager);

// Get form's collection of errors and add error.
this.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057, ErrorMode.Modeless);</code>
      <code>Dim root, txtbox As XPathNavigator
' Create XPathNavigator for main data source.
root = Me.MainDataSource.CreateNavigator()

' Create XPathNavigator positioned at field to add error.
txtbox = root.SelectSingleNode("//my:field1", Me.NamespaceManager)

' Get form's collection of errors and add error.
Me.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057, ErrorMode.Modeless)</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormErrorCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormErrorCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.FormError Add (System.Xml.XPath.XPathNavigator context, string name, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.InfoPath.FormError Add(class System.Xml.XPath.XPathNavigator context, string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.Add(System.Xml.XPath.XPathNavigator,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (context As XPathNavigator, name As String, message As String) As FormError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::Office::InfoPath::FormError ^ Add(System::Xml::XPath::XPathNavigator ^ context, System::String ^ name, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Xml.XPath.XPathNavigator * string * string -&gt; Microsoft.Office.InfoPath.FormError" Usage="formErrorCollection.Add (context, name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.FormError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned at the node that the error will be associated with.</param>
        <param name="name">The name of the error (cannot be blank).</param>
        <param name="message">The short message for the error.</param>
        <summary>Creates and adds a new <see cref="T:Microsoft.Office.InfoPath.FormError" /> to the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <returns>A reference to the new <see cref="T:Microsoft.Office.InfoPath.FormError" /> that was added to the collection.</returns>
        <remarks>
          <para>The <see cref="P:Microsoft.Office.InfoPath.FormError.FormErrorType" /> of the new <b>FormError</b> will be set to <see cref="F:Microsoft.Office.InfoPath.FormErrorType.UserDefined" />.</para>
          <para>
            <b>Note</b>: It is possible to add multiple errors with the same <paramref name="name" /> parameter value to different <paramref name="context" /> nodes. However, if you add an error with the same name to the same <paramref name="context" /> node twice, the second error added overwrites the first one.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, first an <b>XPathNavigator</b> object is positioned at the field with which to associate an error. Then, the <b>XPathNavigator</b>, name, and message are passed to the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Add" /> method of the <b>FormErrorCollection</b> class to add the error to the form's error collection.</para>
          <code>XPathNavigator root, txtbox;
// Create XPathNavigator for main data source.
root = this.MainDataSource.CreateNavigator();

// Create XPathNavigator positioned at field to associate with error.
txtbox = root.SelectSingleNode("//my:field1", this.NamespaceManager);

// Get form's collection of errors and add error.
this.Errors.Add(txtbox, "Field1Error", "Short error message.");</code>
          <code>Dim root, txtbox As XPathNavigator
' Create XPathNavigator for main data source.
root = Me.MainDataSource.CreateNavigator()

' Create XPathNavigator positioned at field to add error.
txtbox = root.SelectSingleNode("//my:field1", Me.NamespaceManager)

' Get form's collection of errors and add error.
Me.Errors.Add(txtbox, "Field1Error", "Short error message.")</code>
        </example>
        <exception cref="T:System.ArgumentNullException">The parameters passed to this method are a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">The parameters passed to this method are not valid. For example, they are of the wrong type or format.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.FormError Add (System.Xml.XPath.XPathNavigator context, string name, string message, string messageDetails);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.InfoPath.FormError Add(class System.Xml.XPath.XPathNavigator context, string name, string message, string messageDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.Add(System.Xml.XPath.XPathNavigator,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (context As XPathNavigator, name As String, message As String, messageDetails As String) As FormError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::Office::InfoPath::FormError ^ Add(System::Xml::XPath::XPathNavigator ^ context, System::String ^ name, System::String ^ message, System::String ^ messageDetails);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Xml.XPath.XPathNavigator * string * string * string -&gt; Microsoft.Office.InfoPath.FormError" Usage="formErrorCollection.Add (context, name, message, messageDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.FormError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageDetails" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned at the node that the error will be associated with.</param>
        <param name="name">The name of the error (cannot be blank).</param>
        <param name="message">The short message for the error.</param>
        <param name="messageDetails">The detailed message for the error.</param>
        <summary>Creates and adds a new <see cref="T:Microsoft.Office.InfoPath.FormError" /> to the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <returns>A reference to the new <see cref="T:Microsoft.Office.InfoPath.FormError" /> that was added to the collection.</returns>
        <remarks>
          <para>The <see cref="P:Microsoft.Office.InfoPath.FormError.FormErrorType" /> of the new <b>FormError</b> will be set to <see cref="F:Microsoft.Office.InfoPath.FormErrorType.UserDefined" />.</para>
          <para>
            <b>Note</b>: It is possible to add multiple errors with the same <paramref name="name" /> parameter value to different <paramref name="context" /> nodes. However, if you add an error with the same name to the same <paramref name="context" /> node twice, the second error added overwrites the first one.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, first an <b>XPathNavigator</b> object is positioned at the field with which to associate an error. Then, the <b>XPathNavigator</b>, name, message, and detailed message are passed to the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Add" /> method of the <b>FormErrorCollection</b> class to add the error to the form's error collection.</para>
          <code>XPathNavigator root, txtbox;
// Create XPathNavigator for main data source.
root = this.MainDataSource.CreateNavigator();

// Create XPathNavigator positioned at field to associate with error.
txtbox = root.SelectSingleNode("//my:field1", this.NamespaceManager);

// Get form's collection of errors and add error.
this.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057, ErrorMode.Modeless);</code>
          <code>Dim root, txtbox As XPathNavigator
' Create XPathNavigator for main data source.
root = Me.MainDataSource.CreateNavigator()

' Create XPathNavigator positioned at field to add error.
txtbox = root.SelectSingleNode("//my:field1", Me.NamespaceManager)

' Get form's collection of errors and add error.
Me.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057, ErrorMode.Modeless)</code>
        </example>
        <exception cref="T:System.ArgumentException">The parameters passed to this method are not valid. For example, they are of the wrong type or format.</exception>
        <exception cref="T:System.ArgumentNullException">The parameters passed to this method are a null reference (Nothing in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.FormError Add (System.Xml.XPath.XPathNavigator context, string name, string message, string messageDetails, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.InfoPath.FormError Add(class System.Xml.XPath.XPathNavigator context, string name, string message, string messageDetails, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.Add(System.Xml.XPath.XPathNavigator,System.String,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (context As XPathNavigator, name As String, message As String, messageDetails As String, errorCode As Integer) As FormError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::Office::InfoPath::FormError ^ Add(System::Xml::XPath::XPathNavigator ^ context, System::String ^ name, System::String ^ message, System::String ^ messageDetails, int errorCode);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Xml.XPath.XPathNavigator * string * string * string * int -&gt; Microsoft.Office.InfoPath.FormError" Usage="formErrorCollection.Add (context, name, message, messageDetails, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.FormError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageDetails" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned at the node that the error will be associated with.</param>
        <param name="name">The name of the error (cannot be blank).</param>
        <param name="message">The short message for the error.</param>
        <param name="messageDetails">The detailed message for the error.</param>
        <param name="errorCode">The error code of the error.</param>
        <summary>Creates and adds a new <see cref="T:Microsoft.Office.InfoPath.FormError" /> to the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <returns>A reference to the new <see cref="T:Microsoft.Office.InfoPath.FormError" /> that was added to the collection.</returns>
        <remarks>
          <para>The <see cref="P:Microsoft.Office.InfoPath.FormError.FormErrorType" /> of the new <b>FormError</b> will be set to <see cref="F:Microsoft.Office.InfoPath.FormErrorType.UserDefined" />.</para>
          <para>
            <b>Note</b>: It is possible to add multiple errors with the same <paramref name="name" /> parameter value to different <paramref name="context" /> nodes. However, if you add an error with the same name to the same <paramref name="context" /> node twice, the second error added overwrites the first one.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, first an <b>XPathNavigator</b> object is positioned at the field with which to associate an error. Then, the <b>XPathNavigator</b>, name, message, detailed message, error code, and error number are passed to the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Add" /> method of the <b>FormErrorCollection</b> class to add the error to the form's error collection.</para>
          <code>XPathNavigator root, txtbox;
// Create XPathNavigator for main data source.
root = this.MainDataSource.CreateNavigator();

// Create XPathNavigator positioned at field to associate with error.
txtbox = root.SelectSingleNode("//my:field1", this.NamespaceManager);

// Get form's collection of errors and add error.
this.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057);</code>
          <code>Dim root, txtbox As XPathNavigator
' Create XPathNavigator for main data source.
root = Me.MainDataSource.CreateNavigator()

' Create XPathNavigator positioned at field to add error.
txtbox = root.SelectSingleNode("//my:field1", Me.NamespaceManager)

' Get form's collection of errors and add error.
Me.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057)</code>
        </example>
        <exception cref="T:System.ArgumentException">The parameters passed to this method are not valid. For example, they are of the wrong type or format.</exception>
        <exception cref="T:System.ArgumentNullException">The parameters passed to this method are a null reference (Nothing in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.FormError Add (System.Xml.XPath.XPathNavigator context, string name, string message, string messageDetails, int errorCode, Microsoft.Office.InfoPath.ErrorMode errorMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.InfoPath.FormError Add(class System.Xml.XPath.XPathNavigator context, string name, string message, string messageDetails, int32 errorCode, valuetype Microsoft.Office.InfoPath.ErrorMode errorMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.Add(System.Xml.XPath.XPathNavigator,System.String,System.String,System.String,System.Int32,Microsoft.Office.InfoPath.ErrorMode)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (context As XPathNavigator, name As String, message As String, messageDetails As String, errorCode As Integer, errorMode As ErrorMode) As FormError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::Office::InfoPath::FormError ^ Add(System::Xml::XPath::XPathNavigator ^ context, System::String ^ name, System::String ^ message, System::String ^ messageDetails, int errorCode, Microsoft::Office::InfoPath::ErrorMode errorMode);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Xml.XPath.XPathNavigator * string * string * string * int * Microsoft.Office.InfoPath.ErrorMode -&gt; Microsoft.Office.InfoPath.FormError" Usage="formErrorCollection.Add (context, name, message, messageDetails, errorCode, errorMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.FormError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageDetails" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorMode" Type="Microsoft.Office.InfoPath.ErrorMode" />
      </Parameters>
      <Docs>
        <param name="context">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned at the node that the error will be associated with.</param>
        <param name="name">The name of the error (cannot be blank).</param>
        <param name="message">The short message for the error.</param>
        <param name="messageDetails">The detailed message for the error.</param>
        <param name="errorCode">The error code of the error.</param>
        <param name="errorMode">An <see cref="T:Microsoft.Office.InfoPath.ErrorMode" /> that specifies the mode for displaying the error message.</param>
        <summary>Creates and adds a new <see cref="T:Microsoft.Office.InfoPath.FormError" /> to the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <returns>A reference to the new <see cref="T:Microsoft.Office.InfoPath.FormError" /> that was added to the collection.</returns>
        <remarks>
          <para>The <see cref="P:Microsoft.Office.InfoPath.FormError.FormErrorType" /> of the new <b>FormError</b> will be set to <see cref="F:Microsoft.Office.InfoPath.FormErrorType.UserDefined" />.</para>
          <para>
            <b>Note</b>: It is possible to add multiple errors with the same <paramref name="name" /> parameter value to different <paramref name="context" /> nodes. However, if you add an error with the same name to the same <paramref name="context" /> node twice, the second error added overwrites the first one.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, first an <b>XPathNavigator</b> object is positioned at the field with which to associate an error. Then, the <b>XPathNavigator</b>, name, message, detailed message, error code, error number, and error display mode are passed to the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Add" /> method of the <b>FormErrorCollection</b> class to add the error to the form's error collection.</para>
          <code>XPathNavigator root, txtbox;
// Create XPathNavigator for main data source.
root = this.MainDataSource.CreateNavigator();

// Create XPathNavigator positioned at field to associate with error.
txtbox = root.SelectSingleNode("//my:field1", this.NamespaceManager);

// Get form's collection of errors and add error.
this.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057, ErrorMode.Modeless);</code>
          <code>Dim root, txtbox As XPathNavigator
' Create XPathNavigator for main data source.
root = Me.MainDataSource.CreateNavigator()

' Create XPathNavigator positioned at field to add error.
txtbox = root.SelectSingleNode("//my:field1", Me.NamespaceManager)

' Get form's collection of errors and add error.
Me.Errors.Add(txtbox, "Field1Error", "Short error message.", 
   "Detailed error description.", 102057, ErrorMode.Modeless)</code>
        </example>
        <exception cref="T:System.ArgumentException">The parameters passed to this method are<b></b>not valid. For example, they are of the wrong type or format.</exception>
        <exception cref="T:System.ArgumentNullException">The parameters passed to this method are a null reference (Nothing in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.FormErrorCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.InfoPath.FormErrorCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of <see cref="T:Microsoft.Office.InfoPath.FormError" /> objects in the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <value>The number of errors in the collection.</value>
        <remarks>
          <para>This member can be accessed without restrictions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (Microsoft.Office.InfoPath.FormError formError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class Microsoft.Office.InfoPath.FormError formError) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.Delete(Microsoft.Office.InfoPath.FormError)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (formError As FormError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(Microsoft::Office::InfoPath::FormError ^ formError);" />
      <MemberSignature Language="F#" Value="abstract member Delete : Microsoft.Office.InfoPath.FormError -&gt; unit" Usage="formErrorCollection.Delete formError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formError" Type="Microsoft.Office.InfoPath.FormError" />
      </Parameters>
      <Docs>
        <param name="formError">The <b>FormError</b> to delete.</param>
        <summary>Deletes the specified <see cref="T:Microsoft.Office.InfoPath.FormError" /> from the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <remarks>
          <para>Only errors of type <b>ErrorType.UserDefined</b> can be deleted from the collection. If the specified error is not user-defined, or is not in the collection, an exception is thrown.</para>
          <para>This member can be accessed without restrictions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <see cref="M:Microsoft.Office.InfoPath.FormErrorCollection.GetErrors(Microsoft.Office.InfoPath.FormErrorType)" /> method of the <b>FormErrorCollection</b> class is used to get an array of all user-defined errors in the form's error collection. Then, the<b> Delete(</b><paramref name="formError" /><b>)</b> method is used to delete the first <b>FormError</b> object in the array from the form's error collection.</para>
          <code>FormErrorCollection myErrors = this.Errors;
FormError[] myUserErrors;

// Get all user defined errors.
myUserErrors = myErrors.GetErrors(FormErrorType.UserDefined);

// Delete the first user defined error.
myErrors.Delete(myUserErrors[0]);</code>
          <code>Dim myErrors As FormErrorCollection  = Me.Errors
Dim myUserErrors As FormError()

' Get all user defined errors.
myUserErrors = myErrors.GetErrors(FormErrorType.UserDefined)

' Delete the first user defined error.
myErrors.Delete(myUserErrors(0))</code>
        </example>
        <exception cref="T:System.ArgumentException">The parameter passed to this method is not valid. For example, it is of the wrong type or format.</exception>
        <exception cref="T:System.ArgumentNullException">The parameter passed to this method is a null reference (Nothing in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Delete : string -&gt; unit" Usage="formErrorCollection.Delete name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <b>FormError</b> to delete.</param>
        <summary>Deletes all <see cref="T:Microsoft.Office.InfoPath.FormError" /> objects of the specified name from the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <remarks>
          <para>All errors of the specified name will be deleted from the collection (errors associated with different context nodes in the form can have the same name). Only errors of type <b>ErrorType.UserDefined</b> can be deleted from the collection. If the specified error is not user-defined, or is not in the collection, an exception is thrown.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the<b> Delete(</b><paramref name="name" /><b>)</b> method is used to delete the error name <b>Field1Error</b> from the <b>FormErrorCollection</b> object associated with the current form.</para>
          <code>this.Errors.Delete("Field1Error");</code>
          <code>Me.Errors.Delete("Field1Error")</code>
        </example>
        <exception cref="T:System.ArgumentException">The parameter passed to this method is not valid. For example, it is of the wrong type or format.</exception>
        <exception cref="T:System.ArgumentNullException">The parameter passed to this method is a null reference (Nothing in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAll">
      <MemberSignature Language="C#" Value="public abstract void DeleteAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.DeleteAll" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub DeleteAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DeleteAll();" />
      <MemberSignature Language="F#" Value="abstract member DeleteAll : unit -&gt; unit" Usage="formErrorCollection.DeleteAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes all of the <see cref="T:Microsoft.Office.InfoPath.FormError" /> objects contained in the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <remarks>
          <para>To delete a specific <b>FormError</b> object from the <b>FormErrorCollection</b> collection, use the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Delete" /> method.</para>
          <para>
            <b>Note</b>: Unlike the <b>Delete</b> method that will only delete errors that were created using the <see cref="Overload:Microsoft.Office.InfoPath.FormErrorCollection.Add" /> method (errors of type <b>FormErrorType.UserDefined</b>), the <b>DeleteAll</b> method will delete all errors in the collection, regardless of how they were created (errors of all <see cref="T:Microsoft.Office.InfoPath.FormErrorType" />).</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the<b> DeleteAll</b> method is used to delete all errors from the <b>FormErrorCollection</b> object associated with the current form.</para>
          <code>this.Errors.DeleteAll();</code>
          <code>Me.Errors.DeleteAll()</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="formErrorCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object that iterates over all entries in the collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> for iterating over the collection.</returns>
        <remarks>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.FormError[] GetErrors (Microsoft.Office.InfoPath.FormErrorType errorType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.InfoPath.FormError[] GetErrors(valuetype Microsoft.Office.InfoPath.FormErrorType errorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.GetErrors(Microsoft.Office.InfoPath.FormErrorType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetErrors (errorType As FormErrorType) As FormError()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;Microsoft::Office::InfoPath::FormError ^&gt; ^ GetErrors(Microsoft::Office::InfoPath::FormErrorType errorType);" />
      <MemberSignature Language="F#" Value="abstract member GetErrors : Microsoft.Office.InfoPath.FormErrorType -&gt; Microsoft.Office.InfoPath.FormError[]" Usage="formErrorCollection.GetErrors errorType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.FormError[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorType" Type="Microsoft.Office.InfoPath.FormErrorType" />
      </Parameters>
      <Docs>
        <param name="errorType">A <see cref="T:Microsoft.Office.InfoPath.FormErrorType" /> that specifies the type of errors to return.</param>
        <summary>Returns all <see cref="T:Microsoft.Office.InfoPath.FormError" /> objects of the specified type from the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <returns>An array of type <see cref="T:Microsoft.Office.InfoPath.FormError" /> that contains errors of the specified type.</returns>
        <remarks>
          <para>An empty array is returned if there are no errors in the collection of the specified type.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>GetErrors</b> method of the <b>FormErrorCollection</b> class is used to get all errors of type <b>FormErrorType.UserDefined</b> from the form's errors collection. Then the <see cref="P:Microsoft.Office.InfoPath.FormError.Name" /> property of the <see cref="T:Microsoft.Office.InfoPath.FormError" /> class is used to display their names.</para>
          <code>FormError[] myErrors;
myErrors = this.Errors.GetErrors(FormErrorType.UserDefined);

foreach(FormError err in myErrors)
{
   MessageBox.Show(err.Name);
}</code>
          <code>Dim myErrors As FormError()
myErrors = Me.Errors.GetErrors(FormErrorType.UserDefined)

For Each FormError err In myErrors
   MessageBox.Show(err.Name);
Next</code>
        </example>
        <exception cref="T:System.ArgumentNullException">The parameter passed to this method is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">The parameter passed to this method is not valid. For example, it is of the wrong type or format.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.FormError[] GetErrors (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.InfoPath.FormError[] GetErrors(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.FormErrorCollection.GetErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetErrors (name As String) As FormError()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;Microsoft::Office::InfoPath::FormError ^&gt; ^ GetErrors(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetErrors : string -&gt; Microsoft.Office.InfoPath.FormError[]" Usage="formErrorCollection.GetErrors name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.FormError[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the errors to return.</param>
        <summary>Returns all <see cref="T:Microsoft.Office.InfoPath.FormError" /> objects of the specified name from the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form.</summary>
        <returns>An array of type <see cref="T:Microsoft.Office.InfoPath.FormError" /> that contains all errors of type <b>FormErrorType.UserDefined</b> with the specified name.</returns>
        <remarks>
          <para>An empty array is returned if there are no errors in the collection of the specified name.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>GetErrors</b> method of the <b>FormErrorCollection</b> class is used to get all errors named <b>DateFormatError</b> from the form's errors collection. The <see cref="P:Microsoft.Office.InfoPath.FormError.Message" /> property of the <see cref="T:Microsoft.Office.InfoPath.FormError" /> class is then used to display their error messages.</para>
          <code>FormError[] myErrors;
myErrors = this.Errors.GetErrors("DateFormatError");

foreach(FormError err in myErrors)
{
   MessageBox.Show(err.Message);
}</code>
          <code>Dim myErrors As FormError()
myErrors = Me.Errors.GetErrors("DateFormatError")

For Each FormError err In myErrors
   MessageBox.Show(err.Message);
Next</code>
        </example>
        <exception cref="T:System.ArgumentNullException">The parameter passed to this method is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">The parameter passed to this method is not valid. For example, it is of the wrong type or format.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Office.InfoPath.FormError this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.InfoPath.FormError Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.FormErrorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(index As Integer) As FormError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Office::InfoPath::FormError ^ default[int] { Microsoft::Office::InfoPath::FormError ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.Office.InfoPath.FormError" Usage="Microsoft.Office.InfoPath.FormErrorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.FormError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <b>FormError</b> object to retrieve.</param>
        <summary>Gets a <see cref="T:Microsoft.Office.InfoPath.FormError" /> object from the <see cref="T:Microsoft.Office.InfoPath.FormErrorCollection" /> object associated with the current form by index value.</summary>
        <value>A <see cref="T:Microsoft.Office.InfoPath.FormError" /> object that represents an error in the form.</value>
        <remarks>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para>This type or member can be accessed from code running in forms opened in Microsoft InfoPath Filler or in a Web browser.</para>
          <para />
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">The index value was invalid (<paramref name="index" /> &lt; 0 or <paramref name="index" /> &gt; <see cref="P:Microsoft.Office.InfoPath.FormErrorCollection.Count" />) </exception>
      </Docs>
    </Member>
  </Members>
</Type>
