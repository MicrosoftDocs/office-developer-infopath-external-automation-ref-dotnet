<Type Name="MailEnvelope" FullName="Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope">
  <TypeSignature Language="C#" Value="public interface MailEnvelope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract MailEnvelope" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Interface MailEnvelope" />
  <TypeSignature Language="C++ CLI" Value="public interface class MailEnvelope" />
  <TypeSignature Language="F#" Value="type MailEnvelope = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("096cd588-0786-11d1-95fa-0080c78ee3bb")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("096cd588-0786-11d1-95fa-0080c78ee3bb")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type is a wrapper for a COM interface implemented by a coclass that is required by managed code for COM interoperability. To access the members specified by this interface, use the type that wraps the coclass that implements this interface. For information about that type, including usage, remarks, and examples, see<see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelopeObject" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BCC">
      <MemberSignature Language="C#" Value="public string BCC { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BCC" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.BCC" />
      <MemberSignature Language="VB.NET" Value="Public Property BCC As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BCC { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BCC : string with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.BCC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the blind carbon copy (BCC) value used in <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelopeObject" /> that is associated with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.WindowObject" /> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The values set for the <b>BCC</b> property should be a string of valid e-mail addresses. You can specify multiple e-mail addresses by using a semi-colon (";") between each of them.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <code>MailEnvelopeObject myEnv = thisApplication.ActiveWindow.MailEnvelope;
myEnv.To = "someone@example.com";
myEnv.CC = "someone@example.com";
myEnv.&lt;span class="label"&gt;BCC&lt;/span&gt; = "someone@example.com";
myEnv.Subject = "Test e-mail message";</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public string CC { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CC" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.CC" />
      <MemberSignature Language="VB.NET" Value="Public Property CC As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CC { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CC : string with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the carbon copy (CC) value used in the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelopeObject" /> object that is associated with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.WindowObject" /> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The values set for the <b>CC</b> property should be a string of valid e-mail addresses. You can specify multiple e-mail addresses by using a semi-colon (";") between each of them.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <code>MailEnvelopeObject myEnv = thisApplication.ActiveWindow.MailEnvelope;
myEnv.To = "someone@example.com";
myEnv.&lt;span class="label"&gt;CC&lt;/span&gt; = "someone@example.com";
myEnv.BCC = "someone@example.com";
myEnv.Subject = "Test e-mail message";</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(3)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(3)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the subject value used in the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelopeObject" /> object that is associated with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.WindowObject" /> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>MailEnvelope</b> object does not support the programmatic creation of the body of an e-mail message. Users enter the body text after the e-mail message is displayed in Microsoft Office Outlook 2003.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <code>MailEnvelopeObject myEnv = thisApplication.ActiveWindow.MailEnvelope;
myEnv.To = "someone@example.com";
myEnv.CC = "someone@example.com";
myEnv.BCC = "someone@example.com";
myEnv.&lt;span class="label"&gt;Subject&lt;/span&gt; = "Test e-mail message";</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(4)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(4)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the send-to value used in the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelopeObject" /> object that is associated with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.WindowObject" /> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The values set for the <b>To</b> property should be a string of valid e-mail addresses. You can specify multiple e-mail addresses by using a semi-colon (";") between each of them.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <code>MailEnvelopeObject myEnv = thisApplication.ActiveWindow.MailEnvelope;
myEnv.&lt;span class="label"&gt;To&lt;/span&gt; = "someone@example.com";
myEnv.CC = "someone@example.com";
myEnv.BCC = "someone@example.com";
myEnv.Subject = "Test e-mail message";</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelope.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(5)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(5)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the visibility of the custom e-mail message created with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.MailEnvelopeObject" /> object that is associated with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.WindowObject" /> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>When the <b>Visible</b> property of the <b>MailEnvelope</b> object is set to <b>true</b>, the custom e-mail message will be displayed using Microsoft Office Outlook 2003. If there is no default e-mail editor configured, the <b>Visible</b> property will return an error.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>Visible</b> property of the <b>MailEnvelope</b> object is used to display an e-mail message in Microsoft Office Outlook 2003:</para>
          <code>MailEnvelopeObject myEnv = thisApplication.ActiveWindow.MailEnvelope;
myEnv.&lt;span class="label"&gt;Visible&lt;/span&gt; = true;</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
