<Type Name="User" FullName="Microsoft.Office.Interop.InfoPath.SemiTrust.User">
  <TypeSignature Language="C#" Value="public interface User" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract User" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.SemiTrust.User" />
  <TypeSignature Language="VB.NET" Value="Public Interface User" />
  <TypeSignature Language="C++ CLI" Value="public interface class User" />
  <TypeSignature Language="F#" Value="type User = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("096cd6bc-0786-11d1-95fa-0080c78ee3bb")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type is a wrapper for a COM interface implemented by a coclass that is required by managed code for COM interoperability. To access the members specified by this interface, use the type that wraps the coclass that implements this interface. For information about that type, including usage, remarks, and examples, see<see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserObject" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsCurrentUser">
      <MemberSignature Language="C#" Value="public bool IsCurrentUser (string bstrUsername);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCurrentUser(string bstrUsername) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.InfoPath.SemiTrust.User.IsCurrentUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCurrentUser (bstrUsername As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCurrentUser(System::String ^ bstrUsername);" />
      <MemberSignature Language="F#" Value="abstract member IsCurrentUser : string -&gt; bool" Usage="user.IsCurrentUser bstrUsername" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUsername" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUsername">The user name in the format of "domain\username."</param>
        <summary>Returns <b>true</b> if the current user matches the specified user name.</summary>
        <returns>
          <b>true</b> if the current user matches the specified name; otherwise <b>false</b>.</returns>
        <remarks>
          <para>Even though the <b>IsCurrentUser</b> method is marked as security level 0, it is not always accessible. When a call is made to the <b>IsCurrentUser</b> method, InfoPath first performs a security check to determine if access to this method is allowed. The security check confirms whether the calling code is trusted or not and it determines the location of the calling code.</para>
          <para>If the calling code is trusted (as it is when, for example, the <b>IsCurrentUser</b> method is called from an installed or signed InfoPath form template, or from trusted external code, such as an executable file on the local computer), InfoPath will allow full access to the <b>IsCurrentUser</b> method.</para>
          <para>If the calling code is not trusted (as in the circumstance of a call coming from a domain-based InfoPath form template or from script executing in Microsoft Internet Explorer), InfoPath first checks where the call is being made from. If the call is from code that is not trusted in an InfoPath form template at a URL such as "http://www.contoso.com/example.xsn", then the call is from the Internet zone. InfoPath denies access to the <b>IsCurrentUser</b> method for all calls that are not trusted coming from the Internet zone. If the call is from a URL such as "http://contoso/example.xsn", then the call is from the Intranet zone. For a call that is not trusted from the Intranet zone, InfoPath checks whether the Internet Explorer user authentication settings allow automatic logon (in the Intranet zone only or for every logon). If Internet Explorer is configured for automatic logon, then InfoPath allows full access to the <b>IsCurrentUser</b> method. Otherwise, access to the <b>IsCurrentUser</b> method is denied.</para>
          <para>
            <b>Important</b>: This member can be accessed without restrictions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>IsCurrentUser</b> method of the User object is used to determine if the current user equals "UserDomain\NancyDavilio".</para>
          <code>bool userMatched;
userMatched = thisApplication.User.&lt;span class="label"&gt;IsCurrentUser&lt;/span&gt;(@"UserDomain\NancyDavolio");</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="IsUserMemberOf">
      <MemberSignature Language="C#" Value="public bool IsUserMemberOf (string bstrGroupname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserMemberOf(string bstrGroupname) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.InfoPath.SemiTrust.User.IsUserMemberOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUserMemberOf (bstrGroupname As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUserMemberOf(System::String ^ bstrGroupname);" />
      <MemberSignature Language="F#" Value="abstract member IsUserMemberOf : string -&gt; bool" Usage="user.IsUserMemberOf bstrGroupname" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrGroupname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrGroupname">The group name in the format of "domain\groupname."</param>
        <summary>Returns a value that indicates whether the current user is a member of the specified group.</summary>
        <returns>
          <b>true</b> if the current user is a member of the specified group; otherwise <b>false</b>.</returns>
        <remarks>
          <para>Even though the <b>IsUserMemberOf</b> method is marked as security level 0, it is not always accessible. When a call is made to the <b>IsUserMemberOf</b> method, InfoPath first performs a security check to determine if access to this method is allowed. The security check confirms whether the calling code is trusted or not and it determines the location of the calling code.</para>
          <para>If the calling code is trusted (as it is when, for example, the <b>IsUserMemberOf</b> method is called from an installed or signed InfoPath form template, or from trusted external code, such as an executable file on the local computer), InfoPath will allow full access to the <b>IsUserMemberOf</b> method.</para>
          <para>If the calling code is not trusted (as in the circumstance of a call coming from a domain-based InfoPath form template or from script executing in Microsoft Internet Explorer), InfoPath first checks where the call is being made from. If the call is from code that is not trusted in an InfoPath form template at a URL such as "http://www.contoso.com/example.xsn", then the call is from the Internet zone. InfoPath will deny access to the <b>IsUserMemberOf</b> method for all calls that are not trusted coming from the Internet zone. If the call is from a URL such as "http://contoso/example.xsn", then the call is from the Intranet zone. For a call that is not trusted from the Intranet zone, InfoPath checks whether the Internet Explorer user authentication settings allow automatic logon (in the Intranet zone only or for every logon). If Internet Explorer is configured for automatic logon, then InfoPath checks the user's group membership. If the group membership is public, InfoPath allows full access to the <b>IsUserMemberOf</b> method. If the group membership is not fully public, InfoPath hides the result. That is, InfoPath treats the group membership as if it were not visible. The return value in this case is always <b>False</b> because the group membership is not public. InfoPath does not report that access is denied.</para>
          <para>
            <b>Note</b>: Group membership information is fully public if access to it is allowed and the information is visible by all non-anonymous users. If even a single non-anonymous user has been specifically denied access to membership information, then the group membership information is not fully public.</para>
          <para>
            <b>Important</b>: This member can be accessed without restrictions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>IsUserMemberOf</b> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserObject" /> object is used to determine if the current user is a member of the "GroupDomain\Administrators" group.</para>
          <code>bool groupMatched;
groupMatched = thisApplication.User.&lt;span class="label"&gt;IsUserMemberOf&lt;/span&gt;(@"GroupDomain\Administrators");</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>