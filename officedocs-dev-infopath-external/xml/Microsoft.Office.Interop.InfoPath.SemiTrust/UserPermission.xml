<Type Name="UserPermission" FullName="Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission">
  <TypeSignature Language="C#" Value="public interface UserPermission" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UserPermission" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface UserPermission" />
  <TypeSignature Language="C++ CLI" Value="public interface class UserPermission" />
  <TypeSignature Language="F#" Value="type UserPermission = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("096cd6cb-0786-11d1-95fa-0080c78ee3bb")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("096cd6cb-0786-11d1-95fa-0080c78ee3bb")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type is a wrapper for a COM interface implemented by a coclass that is required by managed code for COM interoperability. To access the members specified by this interface, use the type that wraps the coclass that implements this interface. For information about that type, including usage, remarks, and examples, see<see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermissionObject" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExpirationDate">
      <MemberSignature Language="C#" Value="public object ExpirationDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExpirationDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.ExpirationDate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpirationDate As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ExpirationDate { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpirationDate : obj with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.ExpirationDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the optional expiration date for the permissions on the current form assigned to the user associated with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission" /> object.</summary>
        <value>A <b>System.DateTime</b> that represents the expiration date for the user associated with the <b>UserPermission</b> object.</value>
        <remarks>
          <para>A <b>UserPermission</b> object associates a set of permissions on the current form with a single user and an optional expiration date. The <b>ExpirationDate</b> property gets or sets the optional expiration date of this <b>UserPermission</b> object using the local time zone.</para>
          <para>Because the <b>UserPermission</b> object and its members are new to Microsoft InfoPath, you must cast the object returned by the <b>thisXDocument</b> variable to the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust._XDocument3" /> type to access this object and its members. For more information, see How to: Use Object Model Members That Are Not Compatible with InfoPath 2003.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, a <b>UserPermission</b> object retrieved from the <see cref="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Permission" /> collection for the current form, and then the <b>ExpirationDate</b> property is used to display that user's expiration date.</para>
          <code>_XDocument3 thisDoc = (_XDocument3)thisXDocument;
UserPermission thisUser = 
   thisDoc.Permission["someone@example.com"];
thisXDocument.UI.Alert(thisUser.ExpirationDate.ToString());</code>
          <code>Dim thisDoc As _XDocument3 = DirectCast(thisXDocument, _XDocument3)
UserPermission thisUser = 
   Permission.UserPermissions("someone@example.com")
thisXDocument.UI.Alert(thisUser.ExpirationDate.ToString())</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(3)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(3)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parent object for the <b>UserPermission</b> object.</summary>
        <value>The parent object for the <b>UserPermission</b> object.</value>
        <remarks>
          <para>Because the <b>UserPermission</b> object and its members are new to Microsoft InfoPath, you must cast the object returned by the <b>thisXDocument</b> variable to the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust._XDocument3" /> type to access this object and its members. For more information, see How to: Use Object Model Members That Are Not Compatible with InfoPath 2003.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public int Permission { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Permission" />
      <MemberSignature Language="VB.NET" Value="Public Property Permission As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Permission { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Permission : int with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Permission" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value representing the permissions on the current form assigned to the user associated with a <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission" /> object. </summary>
        <value>An integer value that corresponds to one of the <see cref="T:Microsoft.Office.Core.MsoPermission" /> enumeration values.</value>
        <remarks>
          <para>Because the <b>UserPermission</b> object and its members are new to Microsoft InfoPath, you must cast the object returned by the <b>thisXDocument</b> variable to the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust._XDocument3" /> type to access this object and its members. For more information, see How to: Use Object Model Members That Are Not Compatible with InfoPath 2003.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the user associated with the e-mail address "someone@example.com" is retrieved from the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.Permission" /> collection of the form and assigned to a <b>UserPermission</b> object. Then, the <see cref="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Permission" /> property of the <b>UserPermission</b> object is used to set that user's permissions to the Change access level.</para>
          <para>To access the <see cref="T:Microsoft.Office.Core.MsoPermission" /> enumeration values for setting permissions, you must set a reference to the Microsoft Office 14.0 Object Library using <b>COM</b> tab of the Add Reference dialog box in Visual Studio 2012. This will establish a reference to the members of the <b>Microsoft.Office.Core</b> namespace.</para>
          <para>This example requires a <b>using</b> or <b>Imports</b> directive for the <b>Microsoft.Office.Core</b> namespace in the declarations section of the form module.</para>
          <code>_XDocument3 thisDoc = (_XDocument3)thisXDocument;

UserPermission thisUser = thisDoc.Permission["someone@example.com"];

thisUser.Permission = 
   (int)MsoPermission.msoPermissionChange;</code>
          <code>Dim thisDoc As _XDocument3 = DirectCast(thisXDocument, _XDocument3)

Dim thisUser As UserPermission = _
   thisDoc.Permission["someone@example.com"];

thisUser.Permission = _
   DirectCast(MsoPermission.msoPermissionChange, Integer)</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="abstract member Remove : unit -&gt; unit" Usage="userPermission.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(4)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(4)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the current <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission" /> object from the form's permissions.</summary>
        <remarks>
          <para>Because the <b>UserPermission</b> object and its members are new to Microsoft InfoPath, you must cast the object returned by the <b>thisXDocument</b> variable to the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust._XDocument3" /> type to access this object and its members. For more information, see How to: Use Object Model Members That Are Not Compatible with InfoPath 2003.</para>
          <para>This member can be accessed only by forms opened from a form template that has been configured to run with full trust using the Security and Trust category of the Form Options dialog box. This member requires full trust for the immediate caller and cannot be used by partially trusted code. For more information, see "Using Libraries from Partially Trusted Code" on MSDN.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, a <b>UserPermission</b> object retrieved from the <see cref="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Permission" /> collection for the current form, and then the <b>Remove</b> method is used to remove the user.</para>
          <code>_XDocument3 thisDoc = (_XDocument3)thisXDocument;
UserPermission thisUser = 
   thisDoc.Permission["someone@example.com"];
thisUser.Remove();</code>
          <code>Dim thisDoc As _XDocument3 = DirectCast(thisXDocument, _XDocument3)
UserPermission thisUser = 
   Permission.UserPermissions("someone@example.com")
thisUser.Remove()</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="UserId">
      <MemberSignature Language="C#" Value="public string UserId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.UserId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserId : string" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.UserId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the e-mail address of the user whose permissions on the current form are determined by the specified <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission" /> object.</summary>
        <value>The user's e-mail address.</value>
        <remarks>
          <para>The <b>UserPermission</b> object associates a set of permissions on the current form with a single user and an optional expiration date. The <b>UserId</b> property returns the e-mail address of the user whose permissions are determined by the <b>UserPermission</b> object.</para>
          <para>Because the <b>UserPermission</b> object and its members are new to Microsoft InfoPath, you must cast the object returned by the <b>thisXDocument</b> variable to the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust._XDocument3" /> type to access this object and its members. For more information, see How to: Use Object Model Members That Are Not Compatible with InfoPath 2003.</para>
          <para>This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the second <b>UserPermission</b> object retrieved from the <see cref="P:Microsoft.Office.Interop.InfoPath.SemiTrust.UserPermission.Permission" /> collection for the current form, and then the <b>UserId</b> property is used to display the user's e-mail address.</para>
          <code>_XDocument3 thisDoc = (_XDocument3)thisXDocument;
UserPermission thisUser = 
   thisDoc.Permission[1];
thisXDocument.UI.Alert(thisUser.UserId);</code>
          <code>Dim thisDoc As _XDocument3 = DirectCast(thisXDocument, _XDocument3)
UserPermission thisUser = 
   Permission.UserPermissions(1)
thisXDocument.UI.Alert(thisUser.UserId)</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
