<Type Name="DocActionEvent" FullName="Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent">
  <TypeSignature Language="C#" Value="public interface DocActionEvent : Microsoft.Office.Interop.InfoPath.SemiTrust.DocReturnEvent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DocActionEvent implements class Microsoft.Office.Interop.InfoPath.SemiTrust.DocEvent, class Microsoft.Office.Interop.InfoPath.SemiTrust.DocReturnEvent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent" />
  <TypeSignature Language="VB.NET" Value="Public Interface DocActionEvent&#xA;Implements DocReturnEvent" />
  <TypeSignature Language="C++ CLI" Value="public interface class DocActionEvent : Microsoft::Office::Interop::InfoPath::SemiTrust::DocReturnEvent" />
  <TypeSignature Language="F#" Value="type DocActionEvent = interface&#xA;    interface DocReturnEvent&#xA;    interface DocEvent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.InfoPath.SemiTrust.DocEvent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.InfoPath.SemiTrust.DocReturnEvent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("096cd63a-0786-11d1-95fa-0080c78ee3bb")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("096cd63a-0786-11d1-95fa-0080c78ee3bb")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type is a wrapper for a COM interface implemented by a coclass that is required by managed code for COM interoperability. To access the members specified by this interface, use the type that wraps the coclass that implements this interface. For information about that type, including usage, remarks, and examples, see<see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEventObject" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ReturnStatus">
      <MemberSignature Language="C#" Value="public bool ReturnStatus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent.ReturnStatus" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnStatus { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnStatus : bool with get, set" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent.ReturnStatus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Interop.InfoPath.SemiTrust.DocReturnEvent.ReturnStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(101)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(101)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the return status of the <see cref="E:Microsoft.Office.Interop.InfoPath.SemiTrust._ButtonEventSink_Event.OnClick" /> event.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>ReturnStatus</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEventObject" /> object is available, as the <b>DocActionEvent</b> object inherits from the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocReturnEventObject" /> object, but setting this property to <b>false</b> does not cause the event to fail.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>ReturnStatus</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEventObject" /> object is used to indicate that the <see cref="E:Microsoft.Office.Interop.InfoPath.SemiTrust._ButtonEventSink_Event.OnClick" /> event was not successful:</para>
          <code>[InfoPathEventHandler(MatchPath="ShowViewNames", EventType=InfoPathEventType.OnClick)]
public void ShowViewNames_OnClick(DocActionEvent e)
{
 // Cancel the event.
 e.&lt;span class="label"&gt;ReturnStatus&lt;/span&gt; = false;
}</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.InfoPath.SemiTrust.IXMLDOMNode Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.InfoPath.SemiTrust.IXMLDOMNode Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As IXMLDOMNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::InfoPath::SemiTrust::IXMLDOMNode ^ Source { Microsoft::Office::Interop::InfoPath::SemiTrust::IXMLDOMNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Microsoft.Office.Interop.InfoPath.SemiTrust.IXMLDOMNode" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(200)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(200)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.InfoPath.SemiTrust.IXMLDOMNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the inner-most XML Document Object Model (DOM) node of a form's underlying XML document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>After you have set a reference to the XML DOM node that the <b>Source</b> property returns, you can use any of the properties and methods that are supported by the XML DOM.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>Source</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEventObject" /> object is used to display the source XML data of the inner-most XML Document Object Model (DOM) node of the form's underlying XML document, which contains the button:</para>
          <code>[InfoPathEventHandler(MatchPath="ShowDocActionEventSource", EventType=InfoPathEventType.OnClick)]
public void ShowDocActionEventSource_OnClick(DocActionEvent e)
{
 thisXDocument.UI.Alert("Source: " + e.&lt;span class="label"&gt;Source&lt;/span&gt;.xml);
}</code>
          <para>In the following example, the <b>Source</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEventObject" /> object is used to display the source XML data of the XML DOM node in a message box:</para>
          <code>[InfoPathEventHandler(MatchPath="DocActionEventSource", EventType=InfoPathEventType.OnClick)]
public void DocActionEventSource_OnClick(DocActionEvent e)
{
 thisXDocument.UI.Alert("Source: " + e.&lt;span class="label"&gt;Source&lt;/span&gt;.xml);
}</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="XDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.InfoPath.SemiTrust.XDocument XDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.InfoPath.SemiTrust.XDocument XDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent.XDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XDocument As XDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::InfoPath::SemiTrust::XDocument ^ XDocument { Microsoft::Office::Interop::InfoPath::SemiTrust::XDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XDocument : Microsoft.Office.Interop.InfoPath.SemiTrust.XDocument" Usage="Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEvent.XDocument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Interop.InfoPath.SemiTrust.DocReturnEvent.XDocument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath.SemiTrust</AssemblyName>
        <AssemblyVersion>11.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(100)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.InfoPath.SemiTrust.XDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.XDocument" /> object that is associated with the <see cref="T:Microsoft.Office.Interop.InfoPath.SemiTrust.DocActionEventObject" /> event during an <see cref="E:Microsoft.Office.Interop.InfoPath.SemiTrust._ButtonEventSink_Event.OnClick" /> event.</summary>
        <value>To be added.</value>
        <remarks>
          <para>After you have set a reference to the <b>XDocument</b> object that is returned, you can use any of the properties and methods that it provides.</para>
          <para>
            <b>Important</b>: This member can be accessed only by forms running in the same domain as the currently open form, or by forms that have been granted cross-domain permissions.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>XDocument</b> property of the <b>DocActionEvent</b> object is used to set a reference to the <b>XDocument</b> object:</para>
          <code>public void showViewInfos_OnClick(DocActionEvent e)
{
XDocument doc = e.&lt;span class="label"&gt;XDocument&lt;/span&gt;;
}</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
